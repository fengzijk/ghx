#定义名为stdout的输出端是控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.err
#定义名为stdout的输出端的layout是哪种类型
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#使用pattern布局就要指定的打印信息的具体格式ConversionPattern
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
 
#定义名为file1的输出端的类型为每天产生一个日志文件。
log4j.appender.file1=org.apache.log4j.RollingFileAppender
#//定义生成的文件大小10M，文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.file1.maxFileSize=10240KB
#文件大小到达指定尺寸的时候产生一个新的文件 例如：test2.log.1
log4j.appender.file1.maxBackupIndex=10
log4j.appender.file1.File=/home/devel/bigData/LOG/nineChain/avro.log
log4j.appender.file1.layout=org.apache.log4j.PatternLayout
log4j.appender.file1.layout.ConversionPattern=[DataStore]%p %t %c-%m%n


#这里你自己修改，目前只输出info级别的日志
log4j.rootLogger=warn,stdout,file1
#指定输出级别
#log4j.logger.crm.statistics=debug，可以具体到某个模块
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.PreparedStatement=debug
